continue
user.messages
message = user.messages.where(id: 3).first
user.messages
message.destroy
message.message_categories
message = user.messages.where(id: 3).first
message = user.messages.where(id: 3)
message = user.messages.last
message = user.messages.first
user.messages
sent_messages
continue
user.messages.sent.all
user.messages.sent
continue
message
continue
params
continue
params
continue
object.save!
object.save
object.id
object
params
user
object
exit
Doorkeeper::AccessToken.first
Doorkeeper::AccessToken.all
Doorkeeper::AccessToken.al
Doorkeeper::AccessToken
doorkeeper
doorkeeper_token
params
@accessToken
continue
doorkeeper_token = access_token
doorkeeper_token
doorkeeper_token.token
doorkeeper_token
continue
message.is_read
message = user.messages.inbox.where(display_id: inbox_params[:id]).first
user = current_user
params
continue
existing_user
continue
exit
User.find(doorkeeper_token[:resource_owner_id])
continue
Doorkeeper::AccessToken.all
Doorkeeper::AccessToken
Doorkeeper::Token
Doorkeeper::Application
Doorkeeper::Token
Token
Tokn
@access_token.body
@access_token.merge(@user)
@token
@token.user
@token.token
@token
@token = Doorkeeper::OAuth::TokenResponse.new(@access_token)
Doorkeeper::OAuth::TokenResponse.new(@access_token)
@access_token
continue
params
current_user
continue
@name
exit
user_params
@user.save!
@user
continue
@user
continue
@first_name
continue
User.find_by_username(username)
User.find_by_username
username
@user
exit
@email
continue
@email
exit
@user
@user.email
continue
@email
continue
@user.messages
@user
continue
child.parent.user_id
child.parent
child
exit
child.parent
child
continue
user_params
params
continue
exit
email_params
continue
params
continue
email_params
email_paramas
continue
exit
continue
email_params
continue
params
exit
params
continue
params
continue
params
continue
params
continue
exit
User.find_by_email(params[:username])
user
exit
User.all
User.find_by_email(params[:username])
User.find(email: params[:username])
user
continue
params
exit
"#{params[:username]}@#{DOMAIN}"
"#{params[:username]}@DOMAIN"
"#{params[:username]}@"
"#{params[:username]}"
"#{params[:username]"
DOMAIN
exit
user_params
exit
user_params
exit
@access_token
exit
@email
exit
@email
exit
params[:email]
email
params
exit
params
params[:username]
domain
@email
continue
@user
continue
@user
continue
@user
continue
@user
continue
User.delete_all
@user
continue
Doorkeeper::Application.delete_all
User.delete_all
@user
continue
Doorkeeper::Application.delete_all
User.delete_all
User
@user.id
@user
continue
@user
current_user
continue
Doorkeeper::Application.all
@client
continue
@user
continue
@user = User.new(user_params).save if !@user.nil?
@user
@user = User.find_by_email(user_params[:email].downcase)
@user
continue
user_params[:email].to_lower
user_params[:email].lower_case
user_params[:email].lower
user_params[:email]
User.find_by_email(user_params[:email])
User.all
@user = User.new(user_params).save!
@user.errors.full_messages
@user
@user.errors
@user = User.new(user_params).save
User.new(user_params).save.error
User.new(user_params).save.errors
User.new(user_params).save
User.new(user_params)
@user
continue
nil.exists?
nil.nil?
@user
continue
@client
continue
user_params[:email]
user_params.email
user_params
continue
@access_token
continue
exit
doorkeeper_access_token
@access_token
continue
@app
continue
@app
continue
@app
continue
@app
continue
exit
continue
@params
exit
params
@params
exit
params
@user
current_user
current_usere
