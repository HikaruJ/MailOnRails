continue
@user
continue
@user
continue
@user
continue
@user
continue
User.delete_all
@user
continue
Doorkeeper::Application.delete_all
User.delete_all
@user
continue
Doorkeeper::Application.delete_all
User.delete_all
User
@user.id
@user
continue
@user
current_user
continue
Doorkeeper::Application.all
@client
continue
@user
continue
@user = User.new(user_params).save if !@user.nil?
@user
@user = User.find_by_email(user_params[:email].downcase)
@user
continue
user_params[:email].to_lower
user_params[:email].lower_case
user_params[:email].lower
user_params[:email]
User.find_by_email(user_params[:email])
User.all
@user = User.new(user_params).save!
@user.errors.full_messages
@user
@user.errors
@user = User.new(user_params).save
User.new(user_params).save.error
User.new(user_params).save.errors
User.new(user_params).save
User.new(user_params)
@user
continue
nil.exists?
nil.nil?
@user
continue
@client
continue
user_params[:email]
user_params.email
user_params
continue
@access_token
continue
exit
doorkeeper_access_token
@access_token
continue
@app
continue
@app
continue
@app
continue
@app
continue
exit
continue
@params
exit
params
@params
exit
params
@user
current_user
current_usere
